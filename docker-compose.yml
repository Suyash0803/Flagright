version: '3.8'

services:
  neo4j:
    image: neo4j:5.14.0
    container_name: flagright-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=512M
      - NEO4J_dbms_memory_transaction_total_max=2G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - flagright-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flagright-backend
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - NODE_ENV=production
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - flagright-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flagright-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - flagright-network
    restart: unless-stopped

volumes:
  neo4j_data:
  neo4j_logs:

networks:
  flagright-network:
    driver: bridge
